- startup (get plasma cutter & scan a few things
  - speed up ticks to 16/s
  - switch inventory to not show 0
- Get a lambda (move manually; can't use grabXX yet)
- Get 3 trees (can use grabXX now)
  - first_3_trees:
    - Make a harvester
    - Make a branch predictor
- Plant 1 lambda UNDER the base
  - place "lambda"; build {harvest}
- Harvest a few trees (~15), using harvestline or harvestbox
- next_trees x(n-1)
- Harvest rocks in a grid; make a furnace
- Harvest more trees if they have regrown
- Harvest some copper in a grid
  - Note, IF there's not much copper, skip down to making a drill,
    use it to get some copper first manually!

- Make as much copper wire as min(ore, logs)
- Make ~ x16 strange loops
- Harvest more trees if they have regrown
- make_harvester
  - should now have 2, one for tending lambda
    and one in case we want to harvest more trees
- Tend lambda under the base
  - build {tend "lambda" (\c.c)}
  - Speed up ticks to get 5 lambdas
- Make 5 loggers and one harvester
- Set up tree plantation once we have 5 lambdas
  - define atLog, atBranch
- Tend 1 tree
  - make_harvester; build {tend ...}
- Bit processing
  - Get a bit(0) and bit(1)
  - Ensure x4 strange loops
  - Ensure x4 branch predictors
  - Ensure x4 loggers
  - make 2 harvesters
  - Make bit plantations
- Make a drill
  - obtain bits -> make drill bit
  - ensure 6 copper wire
  - ensure 70 boards  (logs yield 1:4)
  - make_drill
- Set up copper operation
  - Find copper mine with drillbox
  - define atCopper for depot location
  - Create copper ore depot (save name!)
  - define atCopperMine *relative to depot*
  - atCopper (mine "copper ore" atCopperMine copperDepot)
- Use generic prep_provider function to set up counter provider
- Now use prep_provider_C for the rest
