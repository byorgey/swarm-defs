- Get a lambda (move manually; can't use grabXX yet)
- Get 3 trees (can use grabXX now)
  - first_3_trees:
    - Make a harvester (makeH)
    - Make a branch predictor
    - Plant 1 lambda UNDER the base
      - place "lambda"; build {harvest}
- Harvest a few trees (~15), using harvestline or harvestbox
- next_trees x(n-1)
- Harvest rocks in a grid; make a furnace
- Harvest more trees if they have regrown
- Harvest some copper in a grid
  - Note, IF there's not much copper, skip down to making a drill,
    use it to get some copper first manually!
- Make as much copper wire as min(ore, logs)
- Make ~ x16 strange loops
- Harvest more trees if they have regrown
- makeH
  - should now have 2, one for tending lambda
    and one in case we want to harvest more trees
- Tend lambda under the base
  - build {tend "lambda" (\c.c)}
- Create tree, log, and branch depots, start a tree farm, deliver to
  the tree depot
- Make a rubber band manually
  - make log
  - make rubber from LaTeX
  - make rubber band from rubber + strange loop
- Make a special robot just to process the trees
- Get some bits, start bit farms, create bit depots
- Make a drill
  - obtain bits -> make 4 drill bits
  - ensure 24 copper wire
  - ensure 70 logs -> 280 boards
  - makeD (make four: copper, iron, quartz, keep one to clear boulders)
- Now send robot(s) to drill out mountains, identify some mines
  - Create copper, iron, quartz ore depots, start mining & delivering
- Get some LaTeX, start LaTeX farm, create LaTeX depot

- Make bootstrap providers:
  - copper wire (need to give it a furnace)
  - strange loop
  - board (x2?)
  - wooden gear (x2?)
  - teeter-totter
  - comparator
  - flash memory
  - counter
  - sand (just put two sand next to each other instead of depot!)
  - glass (needs furnace)
  - solar panel (needs 3D printer)
  - calculator
  - rubber
  - rubber band

- At this point we should be able to switch to creating providers
  automatically using devices built by other providers, instead of
  from raw materials.

- Make big furnace

- Make scanner provider:
  - Make silicon provider (give it big furnace)
  - circuit provider
  - Start pixel farms + set up pixel depots.
  - camera
  - scanner

- Create more providers to make more drills:
  - box
  - drill bit
  - small motor
  - drill


  - Argh, scanner needs quartz etc.!  Running out of scanners!

- Now start building up tech tree based on iron.




- Make 5 loggers and one harvester
- Set up tree plantation once we have 5 lambdas
  - define atLog, atBranch
- Tend 1 tree
  - make_harvester; build {tend ...}
- Bit processing
  - Get a bit(0) and bit(1)
  - Ensure x4 strange loops
  - Ensure x4 branch predictors
  - Ensure x4 loggers
  - make 2 harvesters
  - Make bit plantations
- Set up copper operation
  - Find copper mine with drillbox
  - define atCopper for depot location
  - Create copper ore depot (save name!)
  - define atCopperMine *relative to depot*
  - atCopper (mine "copper ore" atCopperMine copperDepot)
- Use generic prep_provider function to set up counter provider
- Now use prep_provider_C for the rest


Curry
=====

- Get a lambda
- slv
- Get 5 trees (use 5 grabXX commands in sequence, or atXX (grabrow x5))
- slv; t5
- slv
- get_water (atXX x y)
- slv
- build {harvest}; wait 2; slv  (repeat until lambda)
- lambdas <dir>
- slv
- get_lambdas <dir>
- make "curry"
